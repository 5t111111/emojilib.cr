require "json"

module Emojilib
  module Generator
    class Emoji
      JSON.mapping({
        keywords: Array(String),
        char: { type: String, nilable: true },
        category: String
      })
    end
  end
end

emojis_path = File.expand_path("../../node_modules/emojilib/emojis.json", __FILE__)
emojis = Hash(String, Emojilib::Generator::Emoji).from_json(File.read(emojis_path))

buffer = "# DO NOT EDIT THIS FILE!
#
# Update it by running: crystal run _generator/generator.cr
"

buffer += %(module Emojilib\n)
buffer += %(  EMOJIS = {\n)

emojis.each do |name, content|
  buffer += %{    "#{name}": Emoji.new(\n}
  buffer += %{      ["#{content.keywords.join("\", \"")}"],\n}
  buffer += %{      "#{content.char}",\n}
  buffer += %{      "#{content.category}",\n}
  buffer += %{    ),\n}
end

buffer += %(  }\n)
buffer += %(end\n)

generated_source_path = File.expand_path("../../src/emojilib/generated.cr", __FILE__)

File.delete(generated_source_path) if File.exists?(generated_source_path)
File.write(generated_source_path, buffer)
